{"version":3,"file":"openDb.js","mappings":"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","sources":["webpack://songs/./utilis/openDb.cjs"],"sourcesContent":["function TT({name,safeOp}){\n\tthis.db = openDb(name,\"\");\n\tthis.query = this.db.query.bind(this.db);\n\tthis.initialize = ()=>{\n\t\treturn new Promise((resolve,reject)=>{\n\t\t\tvar falsed = false;\n\t\t\tthis.query('CREATE TABLE IF NOT EXISTS Categorie(id varchar(50) primary key, name varchar(50) not null unique)',[]).then((s)=>{\n\t\tconsole.log(\"Table Categorie Created with sucess\");\n\t\t\t}).catch((e)=>{\n\t\tconsole.log(\"Table Categorie not Created\",e);\n\t\tfalsed = true;\n\t\t\t});\n\t\t\n\t\t\tthis.query(\"CREATE TABLE IF NOT EXISTS Song(id integer primary key, name varchar(100) not null, verses Text not null, cat varchar(50) not null, unique(name,cat), FOREIGN KEY(cat) REFERENCES Categorie(id))\",[]).then((s)=>{\n\t\tconsole.log(\"Table Song Created with Success\");\n\t\tif(falsed)\n\t\t\treject();\n\t\telse\n\t\t\tresolve();\n\t\t\t}).catch((e)=>{\n\t\tconsole.log(\"Table Song not Created\",e);\n\t\tif(falsed)\n\t\t\treject();\n\t\t\t})\n\t\t})\n\t}\n\tthis.initialize();\n\tthis.clear = ()=>{\n\t\treturn new Promise((resolve,reject)=>{\n\t\t\tthis.query('DROP TABLE Categorie',[]).then((s)=>{\n\t\t\t\tif(s){\n\t\t\t\t\tconsole.log(\"Categorie Table Droped\");\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tconsole.log(\"Couldn't delete table Categorie\",s);\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t}).catch((e)=> console.log(\"clear Error\",e));\n\t\t\tthis.query('DROP TABLE Song',[]).then((s)=>{\n\t\t\t\tif(s){\n\t\t\t\t\tconsole.log(\"Song Table Dropped\");\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tconsole.log(\"Couldn't delete table Song\");\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t}).catch((e)=> console.log(\"clear Error\",e))\n\t\t})\n\t}\n\tthis.insertCategorie = (name,id)=>{\n\t\t var txt = 'Wb insertCategorie'\n\t\tvar p = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query('INSERT INTO Categorie(name,id) VALUES(?,?)',[safeOp(name,\"toLowerCase\",null),id]).then((s)=>{\n\t\t\t\tif(s.inserted){\n\t\t\t\t\tresolve(s.inserted);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t}).catch(reject);\n\t\t});\n\t\treturn p;\n\t}\n\tthis.updateCategorie = (name,newName)=>{\n\t\tvar txt = \"Wb updateCategorie \";\n\t\tvar p = ()=>  new Promise((resolve,reject)=>{\n\t\t\tthis.query('UPDATE Categorie SET name=? WHERE name=?',[safeOp(newName,\"toLowerCase\",null),safeOp(name,\"toLowerCase\",null)]).then((s)=>{\n\t\t\t\tif(s.updated){\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tresolve(false)\n\t\t\t\t}\n\t\t\t}).catch(reject)\n\t\t});\n\n\t\treturn p;\n\t}\n\tthis.removeCategorie = (id)=>{\n\t\tvar txt = \"Wb removeCategorie\"\n\t\tvar p = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(\"DELETE FROM Categorie WHERE id=?\",[id]).then((s)=>{\n\t\t\t\tif(s.updated){\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t}).catch(reject);\n\t\t});\n\t\treturn p;\n\t}\n\tthis.getCategorie = (id)=>{\n\t\tvar txt = 'Wb getCategorie';\n\t\t\n\t\tvar p = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(\"SELECT * from Categorie WHERE id=?\",[id]).then((s)=>{\n\t\t\t\tresolve(s.data);\n\t\t\t}).catch(reject)\n\t\t});\n\t\treturn p;\n\t}\n\tthis.getAllCategories = ()=>{\n\t\tvar txt = 'Wb getAllCategories';\n\t\tvar p = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(\"SELECT * FROM Categorie\",[]).then((s)=>{\n\t\t\t\tresolve(s.data);\n\t\t\t}).catch(reject)\n\t\t});\n\n\t\treturn p; \n\t}\n\tthis.insertSong = (name,verses,cat)=>{\n\t\tvar txt = \"Wb insertSong\";\n\t\tverses = JSON.stringify(verses),\n\t\tp = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(\"INSERT INTO Song(name,verses,cat) VALUES(?,?,?)\",[safeOp(name,\"toUpperCase\",null),verses, cat]).then((s)=>{\n\t\t\t\tif(s.inserted){\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t}).catch(reject)\n\t\t});\n\n\t\treturn p;\n\t}\n\tthis.updateSong = (name,cat,newName,verses)=>{\n\t\tvar txt = \"Wb updateSong\",\n\t\tname = safeOp(name,\"toUpperCase\",null),\n\t\tnewName = safeOp(newName,\"toUpperCase\",null),\n\t\tsql = \"UPDATE Song SET \"+((newName)? \"name=?\"+((verses)? \", verses=?\":\"\"): \"verses=?\")+\" WHERE name=? AND cat=?\",\n\t\tholder = [(newName)? newName:verses,(newName && verses)? verses:name,((newName && verses))? name:cat,(newName && verses)? cat: null].filter((s) => s),\n\t\tp = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(sql,holder).then((s)=>{\n\t\t\t\tif(s.updated){\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t}).catch(reject)\n\t\t});\n\t\treturn p;\n\t}\n\tthis.deleteSong = (name,cat)=>{\n\t\tvar txt = \"Wb deleteSong\",\n\t\tp = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(\"DELETE FROM Song WHERE name=? AND cat=?\",[safeOp(name,\"toUpperCase\",null),cat]).then((s)=>{\n\t\t\t\tif(s.updated){\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t}).catch(reject)\n\t\t});\n\t\treturn p;\n\t}\n\tthis.getSong = (name,cat)=>{\n\t\tvar txt = 'Wb getSong',\n\t\tp = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(\"SELECT * from Song WHERE name=? AND cat=?\",[safeOp(name,\"toUpperCase\",null),cat]).then((s)=>{\n\t\t\t\tif(s.data.length){\n\t\t\t\t\ts.data = s.data.pop();\n\t\t\t\t\ts.data.verses = JSON.parse(s.data.verses);\n\t\t\t\t}\n\t\t\t\tresolve(s.data);\n\t\t\t}).catch(reject)\n\n\t\t});\n\t\treturn p;\n\t}\n\tthis.getAllSongs = (cat)=>{\n\t\tvar txt = 'Wb getAllSongs',\n\t\tp = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(\"SELECT * FROM Song WHERE cat=?\",[cat]).then((s)=>{\n\t\t\t\tresolve(s.data);\n\t\t\t}).catch(reject)\n\t\t});\n\t\treturn p;\n\t}\n\tthis.deleteCategorieSong = (catId)=>{\n\t\tvar txt = 'Wb deleteCategorieSong',\n\t\tp = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(\"DELETE FROM Song WHERE cat=?\",[catId]).then((s)=>{\n\t\t\t\tif(s.updated){\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t}).catch(reject)\n\t\t})\n\t}\n\tthis.countSong = (cat)=>{\n\t\tvar txt = 'Wb countSong',\n\t\tp = ()=> new Promise((resolve,reject)=>{\n\t\t\tthis.query(\"SELECT count(*) as TOTAL FROM Song WHERE cat=?\",[cat]).then((s)=>{\n\t\t\t\tresolve(s.data.TOTAL);\n\t\t\t}).catch(reject)\n\t\t});\n\t\treturn p;\n\t}\n\n\tfunction  openDb (name,version=\"1\",size=1024*1024*10){\n\t\tvar D = openDatabase(name,version,name,size);\n\t\tlet rowSealed;\n\t\t\n\t\ttry{\n\t\t\tD.query = (sql,datas=[])=>{\n\t\t\t\treturn new Promise((resolve,reject)=>{\n\t\t\t\t\tD.transaction((t)=>{\n\t\t\t\t\t\tt.executeSql(sql,datas,(tt,s)=> { \n\t\t\t\t\t\t\tvar res = [];\n\t\t\t\t\t\t\tfor(let i=0;;i++){\n\t\t\t\t\t\t\t\tlet row;\n\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\trow = s.rows.item(i);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcatch(e){\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(row){\n\t\t\t\t\t\t\t\t\tif(row.verses){\n\t\t\t\t\t\t\t\t\t\tif(rowSealed === false){\n\t\t\t\t\t\t\t\t\t\t\tres.push(row)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if(rowSealed){\n\t\t\t\t\t\t\t\t\t\t\tres.push({...row})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\tlet oldId = row.id;\n\t\t\t\t\t\t\t\t\t\t\trow.id = 100;\n\t\t\t\t\t\t\t\t\t\t\tif(row.id != 100){\n\t\t\t\t\t\t\t\t\t\t\t\trowSealed = true;\n\t\t\t\t\t\t\t\t\t\t\t\tres.push({...row});\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\trow.id = oldId;\n\t\t\t\t\t\t\t\t\t\t\t\trowSealed = false;\n\t\t\t\t\t\t\t\t\t\t\t\tres.push(row);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse{\t\n\t\t\t\t\t\t\t\t\t\tres.push(row);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tvar r = {data:res, updated:s.rowsAffected};\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tr['inserted'] = s.insertId;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(e){\n\t\t\t\t\t\t\tr['inserted'] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(r);\n\t\t\t\t\t\t}, (tt,e)=> { console.error(\"D.query error\",e); reject(e)});\n\t\t\t\t\t},(e)=> {  reject(e)},(s)=> resolve(null,s));\n\t\t\t\t}) \n\t\t\t}\n\t\t}\n\t\tcatch(e){\n\t\t\tconsole.error(\"openDb Catch error\",e);\n\t\t}\n\n\t\treturn D;\n\t}\n}\nmodule.exports = TT;"],"names":["TT","name","safeOp","db","openDb","query","bind","initialize","Promise","resolve","reject","falsed","then","s","console","log","e","clear","insertCategorie","id","txt","p","inserted","updateCategorie","newName","updated","removeCategorie","getCategorie","data","getAllCategories","insertSong","verses","cat","JSON","stringify","updateSong","sql","holder","filter","deleteSong","getSong","length","pop","parse","getAllSongs","deleteCategorieSong","catId","countSong","TOTAL","version","size","D","openDatabase","rowSealed","datas","transaction","t","executeSql","tt","res","i","row","rows","item","push","oldId","r","rowsAffected","insertId","error","module","exports"],"sourceRoot":""}